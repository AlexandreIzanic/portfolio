---
import { imageConfig } from "astro:assets";
import Link from "../assets/link.png";

interface Props {
  title: string;
  body: string;
  href?: string;
  img?: string;
  tags: string[];
  link?: string;
  role: string;
  iframeLink?: string;
}

const { href, title, body, img, tags, link, role, iframeLink } = Astro.props;
---

<li class="flex flex-col border h-full justify-between w-auto p-4 rounded-lg">
  <a href={href} class="w-full h-full flex flex-col gap-2">
    {
      iframeLink && (
        <div style="position: relative; padding-bottom:calc(50.18587360594795% + 50px); height: 0;">
          <iframe
            id="yr4mn97s4r"
            src={iframeLink}
            width="100%"
            height="100%"
            style="overflow:hidden;position:absolute;border:none"
            scrolling="no"
            allow="clipboard-read; clipboard-write"
            webkitallowfullscreen
            mozallowfullscreen
            allowfullscreen
            allowtransparency="true"
          />
        </div>
      )
    }

    <img src={img} class="rounded-lg w-auto" />

    <div class="">
      <h2 class="font-bold text-xl pt-3">
        {title}
      </h2>
      <span class="text-gray-500 text-sm">{role}</span>
    </div>
    <div class="w-full border"></div>
    <div class="h-full flex flex-col justify-between">
      <div>
        <slot name="body" />
        <slot name="description" />
      </div>
      <ul class="flex flex-wrap">
        {
          tags &&
            tags.map((tag) => (
              <li class="bg-neutral-50 text-gray-300 rounded border px-3 py-[1px] text-sm mr-2 mt-2 hover:bg-neutral-200 transition-all">
                {tag}
              </li>
            ))
        }
      </ul>
    </div>
    {
      link && (
        <a href={link} class="text-blue-500  w-9  ">
          <img
            src={Link.src}
            class=" w-auto p-3 rounded-lg border h-9 hover:bg-slate-200 mt-2"
          />
        </a>
      )
    }
  </a>
</li>
